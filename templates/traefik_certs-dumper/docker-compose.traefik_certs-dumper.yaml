---
services:
  traefik_certs-dumper:
    ######################################################################
    # --- CONTAINER BASICS
    ######################################################################
    # image: ${TRAEFIK_CERTS_DUMPER_IMAGE:?Image required}
    container_name: ${APP_NAME:?App name required}-certs-dumper
    hostname: ${APP_NAME}-certs-dumper
    restart: unless-stopped                                                                                                                                     # Automatically restart unless manually stopped
    build:                                                                                                                                                      # Optional: build image from local Dockerfile
      context: ./dockerfiles
      dockerfile: Dockerfile.traefik-certs-dumper.scp

    ######################################################################
    # --- SECURITY SETTINGS
    ######################################################################
    # user: '1000:1000'                                                                                                                                         # Optional: run as specific non-root user (app user)
    read_only: true                                                                                                                                             # Filesystem is read-only except for mounted volumes
    cap_drop:                                                                                                                                                   # Drop all capabilities by default
      - ALL
    # cap_add:                                                                                                                                                  # Add needed capabilities
    #   - 
    security_opt:
      - no-new-privileges:true                                                                                                                                  # Prevent privilege escalation

    ######################################################################
    # --- SYSTEM RUNTIME
    ######################################################################
    init: true                                                                                                                                                  # PID 1 is tini â€“ handles zombies properly
    stop_grace_period: 30s                                                                                                                                      # Give app time to shut down gracefully
    oom_score_adj: -500                                                                                                                                         # Reduce likelihood of getting killed under memory pressure
    tmpfs:                                                                                                                                                      # Ephemeral storage in RAM, auto-cleared on restart
      - /run                                                                                                                                                    # Mount /run as tmpfs for runtime files (PID files, sockets, etc.)
      - /tmp                                                                                                                                                    # Mount /tmp as tmpfs for temporary files; faster and auto-cleared on restart

    ######################################################################
    # --- FILESYSTEM & SECRETS
    ######################################################################
    volumes:                                                                                                                                                    # Mount external storage or host directories into the container for persistent data or config
      - /etc/localtime:/etc/localtime:ro                                                                                                                        # Set container time to host time
      - /etc/timezone:/etc/timezone:ro                                                                                                                          # Pass timezone info
      - /root/.ssh/id_rsa:/root/.ssh/id_rsa:ro                                                                                                                  # Read the id_rsa file to get ssh access to remote server
      - ./scripts/post-hook.sh:/config/post-hook.sh:ro                                                                                                          # Access to the script that should run
      - ./appdata/config/certs/:/data/:rw                                                                                                                       # Traefik certificate store
    # secrets:                                                                                                                                                  # Mount the defined secret into the container (usually under /run/secrets/)
    #   - APP_PASSWORD

    ######################################################################
    # --- NETWORKING / REVERSE PROXY
    ######################################################################
    # labels:                                                                                                                                                   # Metadata for the container, often used for service discovery or reverse proxy rules (e.g., Traefik)
    #   - "traefik.enable=true"                                                                                                                                 # Enable Traefik reverse proxy routing for this container
    #   - "traefik.http.routers.${APP_NAME}-rtr.rule=${TRAEFIK_HOST}"                                                                                           # Traefik router
    #   - "traefik.http.services.${APP_NAME}-svc.loadBalancer.server.port=${TRAEFIK_PORT:?Port required}"                                                       # Internal container port
    #   - "traefik.http.routers.${APP_NAME}-rtr.middlewares=authentik-proxy@file"                                                                               # Optional Middlewares: Authentik proxy authentication
    # ports:                                                                                                                                                    # Optional: exposed ports
    #   - 8080:80
    # expose:                                                                                                                                                   # Optional: expose without publishing
    #   - 80
    networks:                                                                                                                                                   # Define which Docker networks the container connects to (controls communication and isolation)
      - backend
      # - frontend
    # extra_hosts:                                                                                                                                              # Optional: manual host entries
    #   - "host.docker.internal:host-gateway"

    ######################################################################
    # --- RUNTIME / ENVIRONMENT
    ######################################################################
    # command: ['your', 'default', 'command']                                                                                                                   # Override default container command
    entrypoint: >-                                                                                                                                              # Override default container entrypoint
      sh -c '
        set -e

        # Wait for cloudflare-acme.json to exist and contain at least one certificate
        while [ ! -f /data/cloudflare-acme.json ] || \
              [ "$(jq "[.[].Certificates | length] | add" /data/cloudflare-acme.json 2>/dev/null)" -eq 0 ]; do
          sleep 1
        done

        # Start traefik-certs-dumper with watcher and post-hook
        traefik-certs-dumper file \
          --domain-subdir \
          --crt-ext=.pem \
          --key-ext=.pem \
          --version v3 \
          --watch \
          --source /data/cloudflare-acme.json \
          --dest /data/files \
          --post-hook "sh /config/post-hook.sh"
      '
    # environment:                                                                                                                                              # Environment variables for container configuration
    #   ENV_VAR_EXAMPLE: ${ENV_VAR_EXAMPLE}
    #   APP_PASSWORD_FILE: /run/secrets/APP_PASSWORD 
    logging:                                                                                                                                                    # Configure log driver and limits to control log size and rotation
      driver: "json-file"
      options:
        max-size: "10m"                                                                                                                                         # Max log file size before rotation
        max-file: "3"                                                                                                                                           # Keep up to 3 rotated log files
    healthcheck:                                                                                                                                                # Periodic container health check to ensure service availability
      test: >                                                                                                                                                   # Command to test container health
        sh -c '
          [ -f /data/cloudflare-acme.json ] &&
          jq "[.[].Certificates | length] | add" /data/cloudflare-acme.json 2>/dev/null | grep -qv "^0$" &&
          find /data/files -name "*.crt.pem" -size +128c | grep -q .
        '
      interval: 30s                                                                                                                                             # Time between checks
      timeout: 5s                                                                                                                                               # Time to wait for response
      retries: 3                                                                                                                                                # Number of retries before marking unhealthy
      start_period: 10s                                                                                                                                         # Give the container time to initialize before health checks start
    stdin_open: false                                                                                                                                           # Optional: keep STDIN open
    tty: false                                                                                                                                                  # Disable terminal allocation; used for non-interactive containers

    ######################################################################
    # --- DEPENDENCIES
    ######################################################################
    depends_on:                                                                                                                                                 # Ensure these services are healthy before starting this one
      app:
        condition: service_healthy

    ######################################################################
    # --- SYSTEM LIMITS
    ######################################################################
    # shm_size: "256m"                                                                                                                                          # Shared memory (default 64M, useful e.g. for Chromium)
    # ulimits:                                                                                                                                                  # Set system resource limits for the container processes (Increasing nofile limits is useful for apps handling many simultaneous connections or files)
    #   nofile:                                                                                                                                                 # Controls the max number of open file descriptors (files, sockets, etc.)
    #     soft: 65535                                                                                                                                           # Soft limit: default max open files a process can have
    #     hard: 65535                                                                                                                                           # Hard limit: maximum value the soft limit can be raised to by privileged processes

# volumes:
#   data:
#     driver: local

# secrets:                                                                                                                                                      # Define sensitive data (like passwords, tokens, keys) securely and inject into services at runtime
#   APP_PASSWORD:
#     file: ${APP_PASSWORD_PATH:?Secret Path required}${APP_PASSWORD_FILENAME:?Secret Filename required}                                                        # Load secret from external file

networks:
  # frontend:
  #   external: true
  backend:
    external: true